import java.util.Stack;

class Solution {
    public static int[] nextSmallerToTheRight(int[] arr) {
        int n = arr.length;
        int[] result = new int[n];
        Stack<Integer> stack = new Stack<>();

        // Iterate through the array from right to left
        for (int i = n - 1; i >= 0; i--) {
            // Pop elements from the stack that are greater than or equal to the current element
            while (!stack.isEmpty() && stack.peek() >= arr[i]) {
                stack.pop();
            }

            // If the stack is empty, there is no smaller element on the right
            if (stack.isEmpty()) {
                result[i] = -1;
            } else {
                result[i] = stack.peek(); // Set the next smaller element on the right
            }

            stack.push(arr[i]); // Push the current element to the stack
        }

        return result;
    }

    public static void main(String[] args) {
        int[] arr = {4, 5, 2, 10, 8};
        int[] result = nextSmallerToTheRight(arr);

        // Display the result
        System.out.print("Next Smaller Element to the Right: ");
        for (int num : result) {
            System.out.print(num + " ");
        }
    }
}
