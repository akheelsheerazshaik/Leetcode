NEW

class Solution {
    public String frequencySort(String s) {
        // Step 1: Create a HashMap to store the frequency of each character in the input string.
        Map<Character, Integer> hm = new HashMap<>();
        
        // Step 2: Populate the HashMap with character frequencies using a for-each loop.
        for (char c : s.toCharArray()) {
            hm.put(c, hm.getOrDefault(c, 0) + 1);
        }
        
        // Step 3: Create a PriorityQueue to sort the entries based on their values (frequencies).
        PriorityQueue<Map.Entry<Character, Integer>> pq = new PriorityQueue<>(
            (a, b) -> b.getValue() - a.getValue()
        );
        
        // Step 4: Add all entries from the HashMap to the PriorityQueue.
        pq.addAll(hm.entrySet());
        
        // Step 5: Build the result string by appending characters based on their frequencies.
        StringBuilder result = new StringBuilder();
        while (!pq.isEmpty()) {
            Map.Entry<Character, Integer> entry = pq.poll();
            result.append(String.valueOf(entry.getKey()).repeat(entry.getValue()));
        }
        
        // Step 6: Return the final result as a string.
        return result.toString();
    }
}
